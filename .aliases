#!/usr/bin/env bash

# Easier navigation: .., ..., ...., ....., ~ and -
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ~="cd ~" # `cd` is probably faster to type though
alias -- -="cd -"
alias dev="cd ~/Dev"

# Shortcuts
alias dl="cd ~/Downloads"
alias dt="cd ~/Desktop"

# Detect which `ls` flavor is in use
if ls --color > /dev/null 2>&1; then # GNU `ls`
	colorflag="--color"
	export LS_COLORS='no=00:fi=00:di=01;31:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'
else # macOS `ls`
	colorflag="-G"
	export LSCOLORS='BxBxhxDxfxhxhxhxhxcxcx'
fi

# List all files colorized in long format
alias l="ls -lF ${colorflag}"

# List all files colorized in long format, including dot files
alias la="ls -laF ${colorflag}"

# List only directories
alias lsd="ls -lF ${colorflag} | grep --color=never '^d'"

# Always use color output for `ls`
alias ls="command ls ${colorflag}"

# List contents of tarball
alias lstgz="tar -tvf"

# Always enable colored `grep` output
# Note: `GREP_OPTIONS="--color=auto"` is deprecated, hence the alias usage.
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# Enable aliases to be sudo’ed
alias sudo='sudo '

# Get week number
alias week='date +%V'

# Stopwatch
alias timer='echo "Timer started. Stop with Ctrl-D." && date && time cat && date'

# Get macOS Software Updates, and update installed Ruby gems, Homebrew, npm, and their installed packages
alias update='sudo softwareupdate -i -a; brew update; brew upgrade --all; brew cleanup; npm install npm -g; npm update -g; sudo gem update --system; sudo gem update'

# IP addresses
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias localip="ipconfig getifaddr en0"
alias ips="ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"\"); print }'"

# Flush Directory Service cache
alias flush="dscacheutil -flushcache && killall -HUP mDNSResponder"

# Clean up LaunchServices to remove duplicates in the “Open With” menu
alias lscleanup="/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user && killall Finder"

# View HTTP traffic
alias sniff="sudo ngrep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
alias httpdump="sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E \"Host\: .*|GET \/.*\""

# Canonical hex dump; some systems have this symlinked
command -v hd > /dev/null || alias hd="hexdump -C"

# macOS has no `md5sum`, so use `md5` as a fallback
command -v md5sum > /dev/null || alias md5sum="md5"

# macOS has no `sha1sum`, so use `shasum` as a fallback
command -v sha1sum > /dev/null || alias sha1sum="shasum"

# JavaScriptCore REPL
jscbin="/System/Library/Frameworks/JavaScriptCore.framework/Versions/A/Resources/jsc";
[ -e "${jscbin}" ] && alias jsc="${jscbin}";
unset jscbin;

# Trim new lines and copy to clipboard
alias c="tr -d '\n' | pbcopy"

# Recursively delete `.DS_Store` files
alias cleanup="find . -type f -name '*.DS_Store' -ls -delete"

# Empty the Trash on all mounted volumes and the main HDD.
# Also, clear Apple’s System Logs to improve shell startup speed.
# Finally, clear download history from quarantine. https://mths.be/bum
alias emptytrash="sudo rm -rfv /Volumes/*/.Trashes; sudo rm -rfv ~/.Trash; sudo rm -rfv /private/var/log/asl/*.asl; sqlite3 ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV* 'delete from LSQuarantineEvent'"

# Show/hide hidden files in Finder
alias show="defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder"
alias hide="defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder"

# Hide/show all desktop icons (useful when presenting)
alias hidedesktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
alias showdesktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"

# URL-encode strings
alias urlencode='python -c "import sys, urllib as ul; print ul.quote_plus(sys.argv[1]);"'

# Merge PDF files
# Usage: `mergepdf -o output.pdf input{1,2,3}.pdf`
alias mergepdf='/System/Library/Automator/Combine\ PDF\ Pages.action/Contents/Resources/join.py'

# Disable Spotlight
alias spotoff="sudo mdutil -a -i off"
# Enable Spotlight
alias spoton="sudo mdutil -a -i on"

# PlistBuddy alias, because sometimes `defaults` just doesn’t cut it
alias plistbuddy="/usr/libexec/PlistBuddy"

# Ring the terminal bell, and put a badge on Terminal.app’s Dock icon
# (useful when executing time-consuming commands)
alias badge="tput bel"

# Intuitive map function
# For example, to list all directories that contain a certain file:
# find . -name .gitattributes | map dirname
alias map="xargs -n1"

# One of @janmoesen’s ProTip™s
for method in GET HEAD POST PUT DELETE TRACE OPTIONS; do
	alias "$method"="lwp-request -m '$method'"
done

# Make Grunt print stack traces by default
command -v grunt > /dev/null && alias grunt="grunt --stack"

# Stuff I never really use but cannot delete either because of http://xkcd.com/530/
alias stfu="osascript -e 'set volume output muted true'"
alias pumpitup="osascript -e 'set volume 7'"

# Kill all the tabs in Chrome to free up memory
# [C] explained: http://www.commandlinefu.com/commands/view/402/exclude-grep-from-your-grepped-output-of-ps-alias-included-in-description
alias chromekill="ps ux | grep '[C]hrome Helper --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill"

# Lock the screen (when going AFK)
alias afk="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"

# Reload the shell (i.e. invoke as a login shell)
alias reload="exec $SHELL -l"

# ------------------------------------
# Misc Aliases
# ------------------------------------

alias kill-chrome-tabs="ps ux | grep '[C]hrome Helper --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill"
alias list="tree -L 1 --dirsfirst -i"
alias osx-update="sudo softwareupdate -iva"
alias osx-updates="sudo softwareupdate -l"

# ------------------------------------
# yarn Aliases
# ------------------------------------

# [Y]arn
alias y="yarn"
# [Y]arn [C]lean (delete generated artefacts not stored in Git, and lockfiles)
alias yc="rm -f ./package-lock.json ./yarn.lock; git clean -dfX"
# [Y]arn [C]lean [I]nstall (delete everything, then reinstall)
alias yci="yc; yi"
# [Y]arn [D]ependency (install dependency)
alias yd="yarn add -EW"
# [Y]arn [D]ev [D]ependency (install dev dependency)
alias ydd="yarn add -DEW"
# [Y]arn [U]ninstall (uninstall dependency)
alias yu="yarn remove -W"
# [Y]arn [G]lobal install
alias yg="npm install -g"
# [Y]arn [G]lobal [U]ninstall
alias ygu="npm uninstall -g"
# [Y]arn [H]ome
alias yh="npm home"
# [Y]arn [I]nstall
alias yi="yarn install"
# [Y]arn [LS] (list all immediate dependencies)
alias yls="npm ls --s --depth=0"
# [Y]arn [R]un
alias yr="yarn run"
# [Y]arn [B]uild
alias yb="yr build"
# [Y]arn [F]ormat
alias yf="yr format"
# [Y]arn [L]int
alias yl="yr lint"
# [Y]arn [S]tart
alias ys="yr start"
# [Y]arn [T]est
alias yt="yr test"
# [Y]arn [W]atch
alias yw="yr watch"
# [B]uild [L]int [T]est
alias blt="yarn build && yarn lint && yarn test"
# [B]uild [L]int
alias bl="yarn build && yarn lint"
# [B]uild [S]tart
alias bs="yarn build && yarn start"
# [B]uild [T]est
alias bt="yarn build && yarn test"
# [I]nstall [B]uild
alias ib="yarn && yarn build"
# [I]nstall [B]uild [L]int [T]est
alias iblt="yarn && yarn build && yarn lint && yarn test"
# [I]nstall [B]uild [L]int
alias ibl="yarn && yarn build && yarn lint"
# [I]nstall [B]uild [S]tart
alias ibs="yarn && yarn build && yarn start"
# [I]nstall [B]uild [T]est
alias ibt="yarn && yarn build && yarn test"

# ------------------------------------
# Git Aliases
# ------------------------------------

# stage files
alias ga='git add -A'
# list local branches
alias gb='git branch'
# list all local and remote branches
alias gba='git fetch && git branch -a'
# delete local branch, eg. `gbd quicktest`
alias gbd='git branch -D'
# delete remote branch, eg. `gbdr quicktest`
alias gbdr='git push origin --delete --no-verify'
# delete local and remote branch
alias gbda='gbd && gbdr'
# list latest remote branches
alias gbl='git for-each-ref --sort=-committerdate refs/remotes/ --format="%(HEAD) %(committerdate:relative)|%(objectname:short)|%(refname:short)|%(authorname) %(authoremail)" | column -t -s "|"'
# create a new branch, eg. `gbn feature_pmpsht`
alias gbn='git checkout -b'
# eg `gc master`
alias gc='git checkout'
# amend previous commit
alias gca='git commit --amend'
# get name of current branch
alias gcb='git branch | grep \* | cut -d " " -f2'
# eg `gcm 'fixed stuff'`
alias gcm='git commit -m'
# look for changes to remote branches
alias gf='git fetch --prune'
# search code in git history
alias git-search='git log -p | grep --context=4'
# show the commit history
alias gl="git log --use-mailmap --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%aN>%Creset'"
# git list contributors
alias glc="git log --use-mailmap --no-merges --pretty=format:'%aN <%aE>' | sort | uniq"
# grep git log
alias glfm="gl | grep"
# parseable git log
alias glp="git log --pretty=format:'%h|%s|%an' --abbrev-commit"
# short commit history
alias gls="gl --max-count=15 --no-merges"
# eg `gm develop`
alias gm='git merge --no-ff'
# git pull
alias gpl='git pull origin --tags'
# git pull current branch
alias gplc='gpl $(gcb)'
# git pull develop
alias gpld='gpl develop'
# git pull master
alias gplm='gpl master'
# git push
alias gps='git push origin --tags'
# git push current branch
alias gpsc='gps $(gcb)'
# git push develop
alias gpsd='gps develop'
# git push master
alias gpsm='gps master'
# eg `gr develop`
alias gr='git rebase'
alias grd='gr develop'
alias grm='gr master'
# show all (un)staged and untracked files
alias gs='git status -sb'
# undo
alias gu='git reset --hard && git clean -df'
# update from master
alias gufm='git checkout master && git fetch && git reset --hard origin/master && git checkout - && git rebase master'

# because I can *never* remember this
alias shebang="echo '#!/usr/bin/env bash'"
